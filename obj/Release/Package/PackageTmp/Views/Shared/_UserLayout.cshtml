<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>@ViewBag.Title</title>

    <!--bootstrap.min.css -->
    <link href="~/Content/css/bootstrap.min.css" rel="stylesheet">
    <!--font-awesome.min.css -->
    <link href="~/Content/css/font-awesome.min.css" rel="stylesheet">
    <!--material-design-iconic-font.min.css -->
    <link href="~/Content/css/material-design-iconic-font.min.css" rel="stylesheet">
    <!--owl.carousel.min.css -->
    <link href="~/Content/css/owl.carousel.min.css" rel="stylesheet">
    <!--magnific-popup.css -->
    <link href="~/Content/css/magnific-popup.css" rel="stylesheet">
    <!--nice-select.css -->
    <link href="~/Content/css/nice-select.css" rel="stylesheet">
    <!--slicknav.min.css -->
    <link href="~/Content/css/slicknav.min.css" rel="stylesheet">
    <!--style.css -->
    <link href="~/Content/css/style.css" rel="stylesheet">
    <!--responsive.css -->
    <link href="~/Content/css/responsive.css" rel="stylesheet">

</head>
<body>
    <div id="popup-search-box-id" class="popup-search-box">
        <div class="container">
            <div class="row">
                <div class="col-md-6 col-md-offset-3">
                    <div class="popup-search-box-inner">
                        <form action="mail.php">
                            <div class="row">
                                <div class="col-md-10">
                                    <input type="search" placeholder="Search here...">
                                </div>
                                <div class="col-md-2">
                                    <button type="submit"><i class="zmdi zmdi-search"></i></button>
                                </div>
                            </div>
                        </form>
                        <span class="close-btn-search"><i class="zmdi zmdi-close"></i></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="header-area header-absolute">
        <div class="container">
            <div class="row">
                <div class="col-md-2 col-sm-4 col-xs-6">
                    <div class="logo">
                        <a href="index.html"><img src="~/Content//img/logo.png" alt=""></a>
                    </div>
                </div>
                <div class="col-md-6 col-sm-8">
                    <div class="mainmenu">
                        <ul id="slicknav-menu-list">
                            <li>
                                <a href="@Url.Action("Index","Home")">Home</a>
                            </li>
                            <li>
                                <a href="tours.html">Tours</a>
                                <ul>
                                    <li><a href="tours-details.html">Tours Details</a></li>
                                </ul>
                            </li>
                            <li><a href="about-us.html">About</a></li>
                            <li><a href="@Url.Action("Destination","Home")">Destination</a></li>
                            <li>
                                <a href="@Url.Action("Booking","Booking")">Booking</a>
                            </li>
                            <li>
                                <a href="#">Page</a>
                                <ul>
                                    <li><a href="car-booking.html">Car Booking</a></li>
                                    <li><a href="car-list.html">Car List</a></li>
                                    <li><a href="car-details.html">Car Details</a></li>
                                    <li><a href="flight-home.html">Flight Home</a></li>
                                    <li><a href="flight-booking.html">Flight Booking</a></li>
                                    <li><a href="flight-details.html">Flight Details</a></li>
                                    <li><a href="hotel-list.html">Hotel List</a></li>
                                    <li><a href="hotel-details.html">Hotel Details</a></li>
                                    <li><a href="hotel-booking.html">Hotel Booking</a></li>
                                    <li><a href="shop.html">Shop</a></li>
                                    <li><a href="shop-details.html">Shop Details</a></li>
                                    <li><a href="cart.html">Cart</a></li>
                                    <li><a href="checkout.html">Checkout</a></li>
                                    <li><a href="contact-us.html">Contact Us</a></li>
                                    <li><a href="contact-us-v2.html">Contact Us 2</a></li>
                                    <li><a href="404.html">404 Error</a></li>
                                    <li><a href="404-v2.html">404 Error 2</a></li>
                                    <li><a href=""></a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="blog-medium.html">Blog</a>
                                <ul>
                                    <li><a href="blog-details.html">Blog Details</a></li>
                                    <li><a href="blog-left-sidebar.html">Blog left sidebar</a></li>
                                    <li><a href="blog-right-sidebar.html">Blog right Sidebar</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-4 col-sm-8 col-xs-6">
                    <div class="header-right">
                        <a href="#" class="travel-cart"><img src="~/Content/img/cart-icon-img.png" alt=""><span>0</span></a>
                        <a href="#" class="search-icon-header"><i class="zmdi zmdi-search"></i></a>
                        <ul class="language-selector">
                            <li>
                                <a href="#" class="header-flug"><img src="~/Content//img/flug-1.jpg" alt=""><i class="zmdi zmdi-chevron-down"></i></a>
                                <ul>
                                    <li><a href="#"><img src="~/Content//img/flug-2.jpg" alt=""> <span>India</span></a></li>
                                    <li><a href="#"><img src="~/Content//img/flug-3.jpg" alt=""> <span>NewZealand</span></a></li>
                                    <li><a href="#"><img src="~/Content//img/flug-4.jpg" alt=""> <span>Sri Lanka</span></a></li>
                                    <li><a href="#"><img src="~/Content//img/flug-5.jpg" alt=""> <span>Zimbabwe</span></a></li>
                                </ul>
                            </li>
                        </ul>
                        <a href="login.html">Login</a>
                        <a href="@Url.Action("Register","Register")">Register</a>
                    </div>
                    <div class="slicknav-menu-wrap"></div>
                </div>
            </div>
        </div>
    </div>

    @RenderBody()

    <div class="footer-area section-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-4 col-sm-6">
                    <div class="footer-widget para-widget">
                        <img src="~/Content/img/footer-logo.png" class="footer-logo" alt="">
                        <p>
                            Chinese state media captured the severity of the an
                            city’s latest air pollution crisis which local authorities
                            blamed largely on sand that winds .
                        </p>
                        <p>
                            &copy; 2017 Crazycafe.All Rights Reserved.<br>
                            Designed by <i class="zmdi zmdi-favorite-outline"></i> <a href="#">crazycafe.net</a>
                        </p>
                    </div>
                </div>
                <div class="col-md-2 col-sm-6">
                    <div class="footer-widget list-widget">
                        <h4>Information</h4>
                        <ul>
                            <li><a href="#">Press Centre</a></li>
                            <li><a href="#">About us</a></li>
                            <li><a href="#">Travel News</a></li>
                            <li><a href="#">Privacy policy</a></li>
                            <li><a href="#">Contact Us</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="footer-widget list-widget">
                        <h4>Recent Posts</h4>
                        <ul>
                            <li><a href="#">Standard Blog Post</a></li>
                            <li><a href="#">Amazing Fullwidth Post</a></li>
                            <li><a href="#">Amazing Place</a></li>
                            <li><a href="#">Quote Post</a></li>
                            <li><a href="#">Link Post</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="footer-widget pink-icon-widget">
                        <h4>Contact Us</h4>
                        <ul>
                            <li><a href="tel:(799)-376-4681">(799) 376-4681</a></li>
                            <li><a href="mailto:Stroman.rogers@gmail.com">Stroman.rogers@gmail.com</a></li>
                            <li>
                                <a href="#">
                                    6281 Liana Extensions,
                                    Lemkeport, NY
                                </a>
                            </li>
                        </ul>

                        <div class="social-links-icon">
                            <a href="#"><i class="fa fa-facebook"></i></a>
                            <a href="#"><i class="fa fa-twitter"></i></a>
                            <a href="#"><i class="fa fa-instagram"></i></a>
                            <a href="#"><i class="fa fa-google-plus"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--jquery.min.js-->
    <script src="~/Content/js/jquery.min.js"></script>
    <!--bootstrap.min.js-->
    <script src="~/Content/js/bootstrap.min.js"></script>
    <!--owl.carousel.min.js-->
    <script src="~/Content/js/owl.carousel.min.js"></script>
    <!--magnific-popup-1.1.0.js-->
    <script src="~/Content/js/magnific-popup-1.1.0.js"></script>
    <!--jquery.nice-select.min.js-->
    <script src="~/Content/js/jquery.nice-select.min.js"></script>
    <!--jquery.waypoints.4.0.0.min.js-->
    <script src="~/Content/js/jquery.waypoints.4.0.0.min.js"></script>
    <!--jquery.counterup.min.js-->
    <script src="~/Content/js/jquery.counterup.min.js"></script>
    <!--jquery.slicknav.min.js-->
    <script src="~/Content/js/jquery.slicknav.min.js"></script>
    <!--main.js-->
    <script src="~/Content/js/main.js"></script>
    <script>
    function checkExpiry() {
            expiryDate = $.payment.cardExpiryVal($('.valid_inputCardExpiry').val());
            validateExpiryDate = $.payment.validateCardExpiry(expiryDate.month, expiryDate.year);

            if (validateExpiryDate == true || (isNaN(expiryDate.month) && isNaN(expiryDate.year))) {
                hideExpiryError();
            }
            else {
                expiry_icon.closest('.expiry-date').addClass('validation-error');
            }
        }

        function hideExpiryError() {
            expiry_icon.removeClass();
            expiry_icon.closest('.expiry-date').removeClass('validation-error');
        }

        function checkCVV() {
            cvvNumber = $.payment.validateCardCVC($('.valid_cc_cscv').val());
            if (cvvNumber == true || !$('.valid_cc_cscv').val()) {
                hideCVVError();
            }
            else {
                cvv_icon.closest('.cvv-number').addClass('validation-error');
            }
        }

        function hideCVVError() {
            cvv_icon.removeClass();
            cvv_icon.closest('.cvv-number').removeClass('validation-error');
        }

        function validateCC() {
            $('.valid_cc_number').validateCreditCard(function (result) {
                var cc_icon = $('.valid_cc_number').closest('.card-number').find('i'), cc_name;
                var cc_empty = $('input[name=cc_number]').val() == '';

                if (cc_empty) {
                    cc_icon.removeClass();
                    cc_icon.closest('.card-number').removeClass('validation-error');
                }
                else {
                    if (result.card_type == null && !cc_empty) {
                        cc_icon.removeClass();
                        cc_icon.closest('.card-number').addClass('validation-error');
                        cc_icon.addClass('input-validation-icon zmdi zmdi-alert-circle-o');
                    }
                    else {
                        cards = [];

                        cards.push('amex');
                        cards.push('discover');
                        cards.push('jcb');
                        cards.push('mastercard');
                        cards.push('visa');
                        cards.push('unionpay');

                        if ($.inArray(result.card_type.name, cards) !== -1) {
                            cc_icon.closest('.card-number').removeClass('validation-error');
                            cc_icon.removeClass();
                            cc_icon.addClass('icon ccicon_' + result.card_type.name);
                        }
                        else {
                            cc_icon.removeClass();
                            cc_icon.addClass('input-validation-icon zmdi zmdi-alert-circle-o');
                            cc_icon.closest('.card-number').addClass('validation-error');
                        }
                    }
                }
            });
        }

        $(document).ready(function () {
            mobilizeSubmenu($(".submenu"));

            $('.valid_inputCardExpiry').payment('formatCardExpiry');
            $('.valid_cc_number').payment('formatCardNumber');

            // Show cc icon on page load.
            if ($('.valid_cc_number').val().length > 0) {
                validateCC();
            }

            // CC CHECK LISTENERS
            $('.valid_cc_number').keyup(function () {
                if ($('.valid_cc_number').val().length == 0) {
                    var cc_icon = $('.valid_cc_number').closest('.card-number').find('i'), cc_name;

                    cc_icon.removeClass();
                    cc_icon.closest('.card-number').removeClass('validation-error');
                }

                if ($('.valid_cc_number').val().length >= 13) {
                    validateCC();
                }
            });

            $('.valid_cc_number').focusout(function () {
                var cc_icon = $('.valid_cc_number').closest('.card-number').find('i'), cc_name;
                var cc_empty = $('input[name=cc_number]').val() == '';

                if ($(this).val().length > 0) {
                    $(this).validateCreditCard(function (result) {
                        if (!result.length_valid) {
                            cc_icon.removeClass();
                            cc_icon.addClass('input-validation-icon zmdi zmdi-alert-circle-o');
                            cc_icon.closest('.card-number').addClass('validation-error');
                        }
                    });
                }
            });

            // EXPIRY CHECK LISTENERS.
            $('.valid_inputCardExpiry').on('keyup', function () {
                var expiry_max_length = 7;
                if ($(this).val().length == expiry_max_length) {
                    checkExpiry();
                }

                if ($(this).val().length == 0) {
                    hideExpiryError();
                }
            });

            $('.valid_inputCardExpiry').on('focusout', function () {
                checkExpiry();
            });


            // CVV CHECK LISTENERS.
            $('.valid_cc_cscv').on('keyup', function () {
                var cvv_min_length = 3;
                if ($(this).val().length >= cvv_min_length) {
                    checkCVV();
                }

                if ($(this).val().length == 0) {
                    hideCVVError();
                }
            });

            $('.valid_cc_cscv').on('focusout', function () {
                checkCVV();
            });

            $('#billing_add_cc_payment input[name=amountcustom], #billing_existing_cc_payment input[name=amountcustom]').focus(function () {
                $(this).css('border-color', '#1E88E5');
            });
        });

        $(document).ready(function () {
            if ($('#billing_add_cc_payment input[name=amountcustom]').val() !== '') {
                $('#billing_add_cc_payment input[name=amountcustom]').css('border-color', '#1E88E5');
            }

            if ($('#billing_existing_cc_payment input[name=amountcustom]').val() !== '') {
                $('#billing_existing_cc_payment input[name=amountcustom]').css('border-color', '#1E88E5');
            }
        });

        // Global variables

        var g_cartTypeArray = ['credit_card', 'paypal', 'bitpay', 'alipay'];
        var g_cartArray = [];

        var g_billingTypeToProcessorMap = {
            credit_card: 'verisign',
            paypal: 'paypal',
            bitpay: 'bitpay',
            alipay: 'stripe'
        };

        // Global routines


        function initialize_cc_link() {
            var input = $('input[name=link_credit_card]');
            if (input.is(':checked')) {
                $('#other-amount-block-cc-add').hide();
                $('#billing_add_cc_payment input[type=radio]').prop('checked', false);
            }
            else {
                preselectAmount('creditcard');
            }
        }

        function initialize_unfunded_cc_link() {
            var input = $('input[name=link_credit_card]');
            if (input.is(':checked')) {
                $('#unfunded-other-amount-block').hide();
                $('#cc_form_unfunded input[type=radio]').prop('checked', false);
            }
            else {
                preselectAmount('creditcard');
            }
        }

        function creditcardamountchange() {
            $('input[name=link_credit_card]').prop('checked', false);

            if ($('#billing_add_cc_payment input[type=radio]:checked').val() == 'other') {
                $('#billing_add_cc_payment input[name=amountcustom]').val('0.01');
                $('#other-amount-block-cc-add').show().addClass('slowFadeIn');
            }
            else {
                $('#billing_add_cc_payment input[name=amountcustom]').val('');
                $('#other-amount-block-cc-add').hide();
            }
        }

        function paypalamountchange() {
            if ($('#paypal_form input[type=radio]:checked').val() == 'other') {
                $('#paypal_form input[name=amountcustom]').val('0.01');
                $('#other-amount-block-paypal').show().addClass('slowFadeIn');
            }
            else {
                $('#paypal_form input[name=amountcustom]').val('');
                $('#other-amount-block-paypal').hide();
            }
        }

        function bitcoinamountchange() {
            if ($('#bitpay_form input[type=radio]:checked').val() == 'other') {
                $('#bitpay_form input[name=amountcustom]').val('0.01');
                $('#other-amount-block-bitcoin').show().addClass('slowFadeIn');
            }
            else {
                $('#bitpay_form input[name=amountcustom]').val('');
                $('#other-amount-block-bitcoin').hide();
            }
        }

        function alipayamountchange() {
            if ($('#alipay_form input[type=radio]:checked').val() == 'other') {
                $('#alipay_form input[name=amountcustom]').val('0.01')
                $('#other-amount-block-alipay').show().addClass('slowFadeIn');
            }
            else {
                $('#alipay_form input[name=amountcustom]').val('');
                $('#other-amount-block-alipay').hide();
            }
        }


        $(document).ready(function () {
            $('#cc-custom-amount, #cc-custom-amount-add, #paypal-custom-amount, #bitcoin-custom-amount, #alipay-custom-amount').keyup(function () {
                var current_amount_due = '0.01';

                if (current_amount_due !== '') {
                    if ($(this).val() !== current_amount_due) {
                        var text = '<i class="zmdi zmdi-info-outline"></i> You currently owe $' + current_amount_due;
                        $('span.owe-credit-desc').html(text);
                    }
                }
            });
        });

        function cceamountchange() {
            if ($('#billing_existing_cc_payment input[type=radio]:checked').val() == 'other') {
                $('#billing_existing_cc_payment input[name=amountcustom]').val('0.01');
                $('#other-amount-block').show().addClass('slowFadeIn');
            }
            else {
                $('#billing_existing_cc_payment input[name=amountcustom]').val('');
                $('#other-amount-block').hide();
            }
        }

        function unfundedccupdate() {
            $('input[name=link_credit_card]').prop('checked', false);

            if ($('#cc_form_unfunded input[type=radio]:checked').val() == 'other') {
                $('#cc_form_unfunded input[name=amountcustom]').val('0.01');
                $('#unfunded-other-amount-block').show().addClass('slowFadeIn');
            }
            else {
                $('#cc_form_unfunded input[name=amountcustom]').val('');
                $('#unfunded-other-amount-block').hide();
            }
        }

        function updateFundedCCForms() {
            $('.billing_ccradio:checked').each(function () {
                if ($(this).val() == 'newcc') {
                    $('#billing_existing_cc_payment').hide();
                    $('#billing_add_cc_payment').show();
                }
                else {
                    $('#billing_existing_cc_payment').show();
                    $('#billing_add_cc_payment').hide();
                }
            });

            var loop = $('form[id=billing_existing_cc_payment]').find('input[name=card_position]');

            loop.val($('input[name=id]:checked').prev().val());
        }

        function cartRefresh() {
            if (g_cartArray.length == 0) {
                return;
            }

            for (var i = 0; i < g_cartArray.length; i++) {
                g_cartArray[i].hideError();
                g_cartArray[i].removeAll();
                g_cartArray[i].lock();
            }

            $.ajax({
                url: '/_ajax/giftcode_cart/list.php',
                cache: false,
                dataType: 'json',
                data: {
                    'csrf_token': csrf_token
                },
                type: 'POST',
                success: function (data, textStatus, jqXHR) {
                    if (data.ok) {
                        var gift_code_cart_array = data.gift_code_cart_array;

                        for (var i = 0; i < g_cartArray.length; i++) {
                            g_cartArray[i].unlock();
                            g_cartArray[i].clearInput();

                            for (var j = 0; j < gift_code_cart_array.length; j++) {
                                g_cartArray[i].addCode(
                                    gift_code_cart_array[j].code,
                                    parseFloat(gift_code_cart_array[j].amount),
                                    gift_code_cart_array[j].credit_expire_days,
                                    gift_code_cart_array[j].removable,
                                    gift_code_cart_array[j].display,
                                    gift_code_cart_array[j].description,
                                    gift_code_cart_array[j].processor_requirement_array,
                                    gift_code_cart_array[j].type,
                                    gift_code_cart_array[j].country_list
                                );
                            }
                        }

                        var processor_blacklist_array = data.processor_blacklist_array;

                        for (var i = 0; i < g_cartArray.length; i++) {
                            var blacklist = false;

                            for (var j = 0; j < processor_blacklist_array.length; j++) {
                                if (processor_blacklist_array[j] == g_cartArray[i].getProcessor()) {
                                    blacklist = true;
                                    break;
                                }
                            }

                            g_cartArray[i].setBlacklist(blacklist);
                        }
                    }
                    else {
                        for (var i = 0; i < g_cartArray.length; i++) {
                            g_cartArray[i].unlock();
                            g_cartArray[i].clearInput();
                            g_cartArray[i].showError('Failed to load gift codes.');
                        }
                    }

                    processorEnableByCart();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    for (var i = 0; i < g_cartArray.length; i++) {
                        g_cartArray[i].unlock();
                        g_cartArray[i].clearInput();
                        g_cartArray[i].showError('Failed to load gift codes.');
                    }

                    processorEnableByCart();
                }
            });
        }

        function cartAddCode(code) {
            for (var i = 0; i < g_cartArray.length; i++) {
                g_cartArray[i].hideError();
                g_cartArray[i].lock();
            }

            $.ajax({
                url: '/_ajax/giftcode_cart/add.php',
                cache: false,
                dataType: 'json',
                data: {
                    'code': code,
                    'csrf_token': csrf_token
                },
                type: 'POST',
                success: function (data, textStatus, jqXHR) {
                    if (data.ok) {
                        if (data.add_action == 'funded') {
                            // #21744
                            document.location.href = '/deploy/';
                        }
                        else {
                            for (var i = 0; i < g_cartArray.length; i++) {
                                g_cartArray[i].unlock();
                                g_cartArray[i].clearInput();
                                g_cartArray[i].addCode(
                                    data.code,
                                    parseFloat(data.amount),
                                    data.credit_expire_days,
                                    data.removable,
                                    data.display,
                                    data.description,
                                    data.processor_requirement_array,
                                    data.type,
                                    data.country_list
                                );
                            }

                            cartRefresh();
                            processorEnableByCart();

                            //if (data.modified_cart)
                            //{
                            //	cartRefresh();
                            //}
                        }
                    }
                    else {
                        cartRefresh();
                        processorEnableByCart();

                        for (var i = 0; i < g_cartArray.length; i++) {
                            g_cartArray[i].unlock();
                            g_cartArray[i].clearInput();
                            g_cartArray[i].showError('Cannot add code: ' + data.error);
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    cartRefresh();
                    processorEnableByCart();

                    for (var i = 0; i < g_cartArray.length; i++) {
                        g_cartArray[i].unlock();
                        g_cartArray[i].clearInput();
                        g_cartArray[i].showError('Cannot add code.');
                    }
                }
            });
        }

        function cartRemoveCode(code) {
            for (var i = 0; i < g_cartArray.length; i++) {
                g_cartArray[i].hideError();
                g_cartArray[i].lock();
            }

            $.ajax({
                url: '/_ajax/giftcode_cart/remove.php',
                cache: false,
                dataType: 'json',
                data: {
                    'code': code,
                    'csrf_token': csrf_token
                },
                type: 'POST',
                success: function (data, textStatus, jqXHR) {
                    if (data.ok) {
                        for (var i = 0; i < g_cartArray.length; i++) {
                            g_cartArray[i].unlock();
                            g_cartArray[i].clearInput();
                            g_cartArray[i].removeCode(code);
                        }

                        cartRefresh();
                        processorEnableByCart();
                    }
                    else {
                        for (var i = 0; i < g_cartArray.length; i++) {
                            g_cartArray[i].unlock();
                            g_cartArray[i].clearInput();
                            g_cartArray[i].showError('Cannot remove code: ' + data.error);
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    for (var i = 0; i < g_cartArray.length; i++) {
                        g_cartArray[i].unlock();
                        g_cartArray[i].clearInput();
                        g_cartArray[i].showError('Cannot remove code.');
                    }
                }
            });
        }

        function cartFindByBillingType(billingType) {
            var cart = null;

            for (var i = 0; i < g_cartArray.length; i++) {
                if (g_cartArray[i].getBillingType() == billingType) {
                    cart = g_cartArray[i];
                    break;
                }
            }

            return cart;
        }

        function cartFindByProcessor(processor) {
            var cart = null;

            for (var i = 0; i < g_cartArray.length; i++) {
                if (g_cartArray[i].getProcessor() == processor) {
                    cart = g_cartArray[i];
                    break;
                }
            }

            return cart;
        }

        function cartSyncSelectedAmounts() {
            // cc unfunded
            $('#cc_form_unfunded').each(function () {
                var form = $(this);
                var billingType = form.data('billing_type');
                if (billingType === undefined) {
                    billingType = 'unknown';
                }

                var cart = cartFindByBillingType(billingType);
                if (cart !== null) {
                    if (g_billingTypeToProcessorMap.hasOwnProperty(billingType)) {
                        var processor = g_billingTypeToProcessorMap[billingType];

                        if (!isProcessorEnabled(processor)) {
                            cart.setBilledAmount(0.00);
                            return;
                        }
                    }

                    var amount = 0.00;
                    var amount_checked_jq = form.find('input[name="amount"]:checked');
                    if (amount_checked_jq.length == 1) {
                        amount = amount_checked_jq.val();
                    }

                    if ($('input[id=cc-unfunded-amount]').val() !== '') {
                        amount = $('input[id=cc-unfunded-amount]').val();
                    }

                    amount = parseFloat(amount);
                    if (isNaN(amount)) {
                        cart.setBilledAmount(0.0);
                    }
                    else {
                        cart.setBilledAmount(amount);
                    }
                }
            });

            // paypal
            $('#paypal_form').each(function () {
                var form = $(this);
                var billingType = form.data('billing_type');
                if (billingType === undefined) {
                    billingType = 'unknown';
                }

                var cart = cartFindByBillingType(billingType);
                if (cart !== null) {
                    if (g_billingTypeToProcessorMap.hasOwnProperty(billingType)) {
                        var processor = g_billingTypeToProcessorMap[billingType];

                        if (!isProcessorEnabled(processor)) {
                            cart.setBilledAmount(0.00);
                            return;
                        }
                    }

                    var amount = 0.00;
                    var amount_checked_jq = form.find('input[name="amount"]:checked');
                    if (amount_checked_jq.length == 1) {
                        amount = amount_checked_jq.val();
                    }

                    if ($('input[id=paypal-custom-amount]').val() !== '') {
                        amount = $('input[id=paypal-custom-amount]').val();
                    }

                    amount = parseFloat(amount);
                    if (isNaN(amount)) {
                        cart.setBilledAmount(0.0);
                    }
                    else {
                        cart.setBilledAmount(amount);
                    }
                }
            });

            // alipay
            $('#alipay_form').each(function () {
                var form = $(this);
                var billingType = form.data('billing_type');
                if (billingType === undefined) {
                    billingType = 'unknown';
                }

                var cart = cartFindByBillingType(billingType);
                if (cart !== null) {
                    if (g_billingTypeToProcessorMap.hasOwnProperty(billingType)) {
                        var processor = g_billingTypeToProcessorMap[billingType];

                        if (!isProcessorEnabled(processor)) {
                            cart.setBilledAmount(0.00);
                            return;
                        }
                    }

                    var amount = 0.00;
                    var amount_checked_jq = form.find('input[name="amount"]:checked');
                    if (amount_checked_jq.length == 1) {
                        amount = amount_checked_jq.val();
                    }

                    if ($('input[id=alipay-custom-amount]').val() !== '') {
                        amount = $('input[id=alipay-custom-amount]').val();
                    }

                    amount = parseFloat(amount);
                    if (isNaN(amount)) {
                        cart.setBilledAmount(0.0);
                    }
                    else {
                        cart.setBilledAmount(amount);
                    }
                }
            });
        }

        function processorEnableByCart() {
            if (g_cartArray.length == 0) {
                return;
            }

            var cart = cartFindByBillingType('credit_card');

            var show_processor_map = {};
            show_processor_map['verisign'] = { show: true, message: '' }
            show_processor_map['paypal'] = { show: true, message: '' }
            show_processor_map['bitpay'] = { show: true, message: '' }
            show_processor_map['stripe'] = { show: true, message: '' }

            var verisign_amount = 'default';

            if (cart != null) {
                var processor_requirement_array = cart.getProcessorRequirementArray();

                if (processor_requirement_array.length > 0) {
                    for (var processor in show_processor_map) {
                        if (show_processor_map.hasOwnProperty(processor)) {
                            show_processor_map[processor].show = false;

                            if (processor == 'verisign') {
                                show_processor_map[processor].message = 'This payment method is not available for the current promo.';
                            }
                            else if (processor == 'paypal') {
                                show_processor_map[processor].message = 'PayPal may not be used with this promo.';
                            }
                            else if (processor == 'bitpay') {
                                show_processor_map[processor].message = 'Bitcoin may not be used with this promo.';
                            }
                            else if (processor == 'stripe') {
                                show_processor_map[processor].message = 'Alipay may not be used with this promo.';
                            }
                        }
                    }

                    for (var i = 0; i < processor_requirement_array.length; i++) {
                        if (processor_requirement_array[i] == 'verisign') {
                            show_processor_map['verisign'].show = true;
                            //verisign_amount = 'zero';
                        }
                        else if (processor_requirement_array[i] == 'paypal') {
                            show_processor_map['paypal'].show = true;
                        }
                        else if (processor_requirement_array[i] == 'bitpay') {
                            show_processor_map['bitpay'].show = true;
                        }
                        else if (processor_requirement_array[i] == 'stripe') {
                            show_processor_map['stripe'].show = true;
                        }
                    }
                }
            }


            /*
            var copy = [];
            for (var processor in show_processor_map)
            {
                  copy.push(processor);
            }
            for (var i = 0; i < copy.length; i++)
            {
                  var cart = cartFindByProcessor(copy[i]);

                  if (cart !== null)
                  {
                      if (!show_processor_map[copy[i]] &&
                              cart.getBlacklist()
                      )
                      {
                          // Don't show double BL processors and BL codes.
                          show_processor_map[copy[i]] = true;
                      }
                  }
            }
            */

            // Show panels
            for (var processor in show_processor_map) {
                if (show_processor_map.hasOwnProperty(processor)) {
                    var processor_jq = $('div[data-panel="processor"][data-processor="' + processor + '"]');
                    var no_processor_jq = $('div[data-panel="no_processor"][data-processor="' + processor + '"]');

                    if (show_processor_map[processor].show) {
                        processor_jq.show();
                        no_processor_jq.hide();
                    }
                    else {
                        processor_jq.hide();

                        var error_message_jq = no_processor_jq.find('div.error_message');
                        error_message_jq.text(show_processor_map[processor].message);

                        no_processor_jq.show();
                    }
                }
            }

            // Amounts
            var verisign_processor_jq = $('div[data-panel="processor"][data-processor="' + 'verisign' + '"]');
            var verisign_amount_jq = verisign_processor_jq.find('select[name="amount"]');

            var dom_option_count = verisign_amount_jq.find('option').length;

            var cc_amount_unfunded_array = [];
            cc_amount_unfunded_array.push({ value: '0', label: 'Link Only ($0 deposit)' });
            cc_amount_unfunded_array.push({ value: '5', label: 'Add $5 to account' });
            cc_amount_unfunded_array.push({ value: '10', label: 'Add $10 to account' });
            cc_amount_unfunded_array.push({ value: '15', label: 'Add $15 to account' });
            cc_amount_unfunded_array.push({ value: '25', label: 'Add $25 to account' });
            cc_amount_unfunded_array.push({ value: '50', label: 'Add $50 to account' });
            cc_amount_unfunded_array.push({ value: '75', label: 'Add $75 to account' });
            cc_amount_unfunded_array.push({ value: '100', label: 'Add $100 to account' });
            cc_amount_unfunded_array.push({ value: '150', label: 'Add $150 to account' });
            cc_amount_unfunded_array.push({ value: '200', label: 'Add $200 to account' });
            cc_amount_unfunded_array.push({ value: '250', label: 'Add $250 to account' });

            if (verisign_amount == 'zero') {
                if (dom_option_count != 1) {
                    verisign_amount_jq.find('option').remove();
                    verisign_amount_jq.append('<option value="0">Link Only ($0 deposit)</option>');

                    var option_first_jq = verisign_amount_jq.find('option:first');
                    verisign_amount_jq.val(option_first_jq.val());
                }
            }
            else {
                if (dom_option_count != cc_amount_unfunded_array.length) {
                    verisign_amount_jq.find('option').remove();
                    for (var i = 0; i < cc_amount_unfunded_array.length; i++) {
                        verisign_amount_jq.append('<option value="' + cc_amount_unfunded_array[i].value + '">' + cc_amount_unfunded_array[i].label + '</option>');
                    }

                    var option_first_jq = verisign_amount_jq.find('option:first');
                    verisign_amount_jq.val(option_first_jq.val());
                }
            }

            // Refresh amounts
            cartSyncSelectedAmounts();
        }

        function isProcessorEnabled(processor) {
            var processor_jq = $('div[data-panel="processor"][data-processor="' + processor + '"]');

            return processor_jq.is(':visible');
        }

        function makepaymentSubmit(f) {
            $('#cc_payment_id').val($('input[type=radio][name=id]:checked').val());
            if ($(f).find('select[name=amount]').val() == 'other') {
                var amountcustom = $(f).find('input[name=amountcustom]').val();
                if (!amountcustom.match(/^[\.0-9]+$/)) {
                    showFormError('Minimum payment amount is 1');
                    return false;
                }
                amountcustom = parseFloat(amountcustom);
                if (amountcustom < 1.0) {
                    showFormError('Minimum payment amount is 1');
                    return false;
                }
            }

            $(f).find('button[type="submit"]')
                .prop('disabled', true)
                .html('<i class="sp-white"></i> Paying with Selected Card')
                ;
            return true;
        }

        function submitPayment(button) {
            var text = button.html();
            var spacer = text.indexOf(' ');
            var action = text.substring(0, spacer);
            var appendage = text.substr(spacer + 1);
            var loading_action = action + 'ing' + ' ' + appendage;

            button
                .html('<i class="sp-white"></i> ' + loading_action)
                .parent().submit();
            ;
        }

        $(document).ready(function () {
            preselectAmount('creditcard');
        });

        function changeSideTabCustom(node) {
            var tab = $(node).data('tab');
            showSideTab(tab);
            preselectAmount(tab);
            cartSyncSelectedAmounts();
        }

        function showSideTab(tab) {
            unfundedccupdate();
            $('.form_error').hide();

            $('#block_content_creditcard').hide();
            $('#block_content_paypal').hide();
            $('#block_content_bitpay').hide();
            $('#block_content_alipay').hide();
            $('#block_content_giftcode').hide();
            $('#block_content_' + tab).show();

            $('#block_right_creditcard').hide();
            $('#block_right_paypal').hide();
            $('#block_right_bitpay').hide();
            $('#block_right_alipay').hide();
            $('#block_right_giftcode').hide();
            $('#block_right_' + tab).show();
        }

        function preselectAmount(tab) {
            $('.other-amount').hide();
            switch (tab) {
                case 'creditcard':
                    $('input[type=radio][id=cce10]').prop('checked', true);
                    $('input[type=radio][id=creditcard10]').prop('checked', true);
                    break;

                case 'bitpay':
                    $('input[type=radio][id=bitcoin10]').prop('checked', true);
                    break;

                case 'paypal':
                    $('input[type=radio][id=paypal10]').prop('checked', true);
                    break;

                case 'alipay':
                    $('input[type=radio][id=alipay10]').prop('checked', true);
                    break;
            }
        }

        function showFormError(message) {
            var error_box = $('.form_error');
            error_box.html(message);
            error_box.show();
        }

        function autoPayMovePreferenceOrder(e) {
            if (typeof autoPayMovePreferenceOrderProcessing !== 'undefined' && autoPayMovePreferenceOrderProcessing) {
                return;
            }
            autoPayMovePreferenceOrderProcessing = true;
            $(e).tooltip('destroy');
            $.ajax({
                url: '/billing/',
                type: 'POST',
                dataType: 'json',
                data: {
                    'function': 'autoPayMovePreferenceOrder',
                    'csrf_token': csrf_token,
                    'id': $(e).attr('data-id'),
                    'direction': 'up'
                },
                success: function (response) {
                    if (response.result) {
                        var container = $(e).parent();
                        container.insertBefore(container.prev());
                    }
                    //$(e).tooltip({ container: 'body' });
                    autoPayMovePreferenceOrderProcessing = false;
                },
                error: function (response) {
                    autoPayMovePreferenceOrderProcessing = false;
                    return;
                }
            });
        }

        $(function () {
            // Event handlers
            $("input[name=cc_name]").bind('paste', function () {
                $('input[name=cpadt]').val('y');
            });

            $("input[name=cc_number]").bind('paste', function () {
                $('input[name=cpadt]').val('y');
            });

            $('#cc_form_unfunded').bind('submit', function () {
                var checkJQ = $('#cc_form_unfunded').find('input[type="checkbox"][name="agree_tos"]');
                if (checkJQ.length) {
                    if (!checkJQ.prop('checked')) {
                        showFormError('You must agree to the terms of service.');
                        return false;
                    }
                }
                $('#cc_form_unfunded').find('button[type="submit"]')
                    .prop('disabled', true)
                    .html('<i class="sp-white"></i> Linking Credit Card')
                    ;
                return true;
            });

            $('#billing_add_cc_payment').bind('submit', function () {
                if ($('#billing_add_cc_payment').find('select[name=amount]').val() == 'other') {
                    var amountcustom = $('#billing_add_cc_payment').find('input[name=amountcustom]').val();
                    if (!amountcustom.match(/^[\.0-9]+$/)) {
                        showFormError('Minimum payment amount is 1');
                        return false;
                    }
                    amountcustom = parseFloat(amountcustom);
                    if (amountcustom < 1.0) {
                        showFormError('Minimum payment amount is 1');
                        return false;
                    }
                }

                $('#billing_add_cc_payment').find('button[type="submit"]')
                    .prop('disabled', true)
                    .html('<i class="sp-white"></i> Paying with Credit Card')
                    ;
                return true;
            });

            $('#paypal_form').bind('submit', function () {
                var checkJQ = $('#paypal_form').find('input[type="checkbox"]');

                if (checkJQ.length) {
                    if (!checkJQ.prop('checked')) {
                        showFormError('You must agree to the Terms of Service.');
                        return false;
                    }
                }

                if ($('#paypal_form').find('select[name=amount]').val() == 'other') {
                    var amountcustom = $('#paypal_form').find('input[name=amountcustom]').val();
                    if (!amountcustom.match(/^[\.0-9]+$/)) {
                        showFormError('Minimum payment amount is 1');
                        return false;
                    }
                    amountcustom = parseFloat(amountcustom);
                    if (amountcustom < 1.0) {
                        showFormError('Minimum payment amount is 1');
                        return false;
                    }

                }
                return true;
            });

            $('#cc_form_unfunded').find('input[name="amount"]').change(function () {
                // Update carts
                cartSyncSelectedAmounts();
            });

            $('#cc_form_unfunded').find('input[name="link_credit_card"]').change(function () {
                // Update carts
                cartSyncSelectedAmounts();
            });

            $('#paypal_form').find('input[name="amount"]').change(function () {
                // Update carts
                cartSyncSelectedAmounts();
            });

            $('#bitpay_form').bind('submit', function () {
                var checkJQ = $('#bitpay_form').find('input[type="checkbox"]');

                if (checkJQ.length) {
                    if (!checkJQ.prop('checked')) {
                        showFormError('You must agree to the Terms of Service.');
                        return false;
                    }
                }

                return true;
            });

            $('#alipay_form').find('input[name="amount"]').change(function () {
                // Update carts
                cartSyncSelectedAmounts();
            });

            // Allow specifying a default tab when loading the page
            if (window.location.hash != '') {
                var tabname = window.location.hash.substr(1);
                changeTabSubmenu(tabname);
            }
            else {
                changeTabSubmenu('billingaddfunds');
            }

            $('.tabmenu_radio').removeAttr('checked');

            // Select sidetab
            $('#paymenttype_creditcard').prop('checked', 'checked');

            var default_paymenttype = '';
            var paymenttype_jq = $('#paymenttype_' + default_paymenttype);

            if (paymenttype_jq.length > 0) {
                paymenttype_jq.prop('checked', 'checked');
                changeSideTabCustom(paymenttype_jq.eq(0));
            }

            mmd();

            $('select[name=amount]').change(function () {
                var form = $(this).closest('form');
                var amount = parseFloat($(this).val());

                // Update unfunded CC button
                if (form.prop('id') == 'cc_form_unfunded') {
                    if (amount > 0) {
                        form.find('input[type=submit]').val('Make a Payment');
                    }
                    else {
                        form.find('input[type=submit]').val('Link Credit Card');
                    }
                }

                // Update carts
                cartSyncSelectedAmounts();
            });

            $('input[id=paypal-custom-amount], input[id=cc-unfunded-amount]').keyup(function () {
                cartSyncSelectedAmounts();
            });

            $('input[id=alipay-custom-amount], input[id=cc-unfunded-amount]').keyup(function () {
                cartSyncSelectedAmounts();
            });

            // Setup carts
            for (var i = 0; i < g_cartTypeArray.length; i++) {
                var cartType = g_cartTypeArray[i];
                var cartProcessor = (g_billingTypeToProcessorMap.hasOwnProperty(cartType)) ? g_billingTypeToProcessorMap[cartType] : 'unknown';
                var cartJQ = $('[data-id="cart_' + cartType + '"]');

                if (cartJQ.length == 1) {
                    // Setup cart
                    var cart = new GiftCodeCart(cartJQ, cartType, cartProcessor);

                    cart.setBilledAmount(0.00);

                    cart.setOnAddCodeHandler(function (cart, code) {
                        setTimeout(cartAddCode(code), 1);
                    });

                    cart.setOnRemoveCodeHandler(function (cart, code) {
                        setTimeout(cartRemoveCode(code), 1);
                    });

                    // Update state
                    g_cartArray.push(cart);
                }
            }

            cartRefresh();
            cartSyncSelectedAmounts();

            $('.billing_ccradio').click(function () {
                if ($('.unionpay_radio').is(':checked')) {
                    $('.unionpay_icon').css('opacity', '1');
                }
                else {
                    $('.unionpay_icon').css('opacity', '.7');
                }
            });

            updateFundedCCForms();

            $('.move-cc-up').click(function () {
                $('.tooltip').hide();
                $(this).css('opacity', '0');
                $(this).next('i').addClass('sp-blue').show();

                var prefix = 'cc-order-';
                // We need this info to grab the attributes of the previous CC, the one directly above.
                var button = $(this);
                var this_id = $(this).attr('id');
                var this_order = this_id.replace(prefix, '');
                var this_card = $(this).parent();
                var this_radio = $('input[type=radio][id=' + this_card.attr('for') + ']');
                var this_input = $('input[id=card_position_' + this_order + ']');

                // Cast the upper CC statically.
                var upper_order = this_order - 1;
                var upper_btn = $('#' + prefix + upper_order);
                var upper_card = upper_btn.parent();
                var upper_radio = $('input[type=radio][id=' + upper_card.attr('for') + ']');
                var upper_input = $('input[id=card_position_' + upper_order + ']');

                // Find difference in offset before rearranging DOM.
                var distance = this_card.offset().top - upper_card.offset().top;

                this_card.css('z-index', 'initial');
                upper_card.css('z-index', 'initial');

                if (this_radio.is(':checked')) {
                    this_card.css('z-index', '1000');
                }

                if (upper_radio.is(':checked')) {
                    upper_card.css('z-index', '1000');
                }

                // This is done to allow multiple repositions.
                this_card.attr('for', 'cce_' + upper_order);
                $(this).attr('id', 'cc-order-' + upper_order);
                this_radio.attr('id', 'cce_' + upper_order);

                upper_card.attr('for', 'cce_' + this_order);
                upper_btn.attr('id', 'cc-order-' + this_order);
                upper_radio.attr('id', 'cce_' + this_order);

                $('.move-cc-up').attr('disabled', true);

                $.ajax({
                    url: '/billing/',
                    type: 'POST',
                    data: {
                        'function': 'autoPayMovePreferenceOrder',
                        'csrf_token': csrf_token,
                        'id': this_radio.val(),
                        'direction': 'up'
                    },
                    success: function () {
                        $('i[id=billing-spinner]').hide();
                        if (parseInt(upper_order) !== 0) {
                            button.css('opacity', '1');
                        }
                        else {
                            upper_btn.css('opacity', '1').show();
                            updateFundedCCForms();
                        }

                        // Move card elements.
                        $('.move-cc-up').attr('disabled', false);

                        this_card.animate({
                            top: parseInt(this_card.css('top').replace('px', '')) - parseInt(distance) + 'px'
                        });

                        var height_difference = parseInt(this_card.css('height').replace('px', '')) - parseInt(upper_card.css('height').replace('px', ''));

                        upper_card.animate({
                            top: parseInt(upper_card.css('top').replace('px', '')) + parseInt(distance + height_difference) + 'px'
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>
